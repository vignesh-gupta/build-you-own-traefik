name: reverse-proxy
services:
  nginx:
    # A container that exposes an API to show its IP address
    image: nginx
    labels:
      - "traefik.http.routers.nginx.rule=Host(`nginx.docker.localhost`)"
  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
  traefik-reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.1
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  reverse-proxy:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: npm run dev
    ports:
      - "8080:8080"
      - "80:80"
    network_mode: bridge
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
      - .:/app
